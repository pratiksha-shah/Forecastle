---
# Source: forecastle/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: forecastle
  labels:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
    version: "v1.0.42"
    chart: "forecastle-v1.0.42"
    release: "forecastle"
    heritage: "Tiller"
data:
  config.yaml: |-
    customApps: {}
    headerBackground: null
    headerForeground: null
    instanceName: null
    namespaceSelector:
      matchNames:
      - argus
    title: null
    
---
# Source: forecastle/templates/crd.yaml

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: forecastleapps.forecastle.stakater.com
  annotations:
    "helm.sh/hook": crd-install
spec:
  group: forecastle.stakater.com
  names:
    kind: ForecastleApp
    listKind: ForecastleAppList
    plural: forecastleapps
    singular: forecastleapp
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            group:
              type: string
            icon:
              type: string
            instance:
              type: string
            name:
              type: string
            networkRestricted:
              type: boolean
            properties:
              additionalProperties:
                type: string
              type: object
            url:
              type: string
            urlFrom:
              properties:
                ingressRef:
                  type: object
                routeRef:
                  type: object
              type: object
          required:
          - name
          - group
          - icon
          type: object
        status:
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
# Source: forecastle/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
    version: "v1.0.42"
    chart: "forecastle-v1.0.42"
    release: "forecastle"
    heritage: "Tiller"
  name: forecastle
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: forecastle
      group: com.stakater.platform
      provider: stakater
  template:
    metadata:
      labels:
        app: forecastle
        group: com.stakater.platform
        provider: stakater
    spec:
      automountServiceAccountToken:  true
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: "812290479310.dkr.ecr.us-west-2.amazonaws.com/stakater/forecastle:dev"
        name: forecastle
        volumeMounts:
        - name: forecastle-config
          mountPath: /etc/forecastle
      volumes:
      - name: forecastle-config
        configMap:
          name: forecastle
      serviceAccountName: default

---
# Source: forecastle/templates/ingress.yaml


---
# Source: forecastle/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
    version: "v1.0.42"
    chart: "forecastle-v1.0.42"
    release: "forecastle"
    heritage: "Tiller"
  name: forecastle
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: forecastle-cluster-ingress-role
  labels:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
    version: "v1.0.42"
    chart: "forecastle-v1.0.42"
    release: "forecastle"
    heritage: "Tiller"
rules:
- apiGroups: ["", "extensions"]
  resources: ["ingresses", "namespaces"]
  verbs: ["get", "list"]
- apiGroups:
  - forecastle.stakater.com
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: forecastle-cluster-ingress-role-binding
  labels:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
    version: "v1.0.42"
    chart: "forecastle-v1.0.42"
    release: "forecastle"
    heritage: "Tiller"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: forecastle-cluster-ingress-role
subjects:
- kind: ServiceAccount
  name: forecastle
  namespace: default

---
# Source: forecastle/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
    version: "v1.0.42"
    chart: "forecastle-v1.0.42"
    release: "forecastle"
    heritage: "Tiller"
    expose: "false"
  name: forecastle
  namespace: default
  annotations:
    external-dns.alpha.kubernetes.io/hostname: forecastle.argus.monitoring.fdev1-uswest2.aws.sfdc.cl
    external-dns.alpha.kubernetes.io/ttl: "30"
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
spec:
  type: LoadBalancer
  selector:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
  ports:
  - name: http-target
    port: 80
    protocol: TCP
    targetPort: 3000
  loadBalancerSourceRanges:
    - "127.0.0.1/32"
